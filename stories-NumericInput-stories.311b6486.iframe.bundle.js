"use strict";(self.webpackChunkfrontend=self.webpackChunkfrontend||[]).push([[716],{"./src/stories/NumericInput.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Demo:()=>Demo,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});const __WEBPACK_DEFAULT_EXPORT__={title:"Components/Numeric Input",component:__webpack_require__("./src/stories/NumericInput.tsx").X,parameters:{layout:"centered"},tags:["autodoc"],argTypes:{min:{control:"number",type:"number"},max:{control:"number",type:"number"},minLength:{control:"number",type:"number"},maxLength:{control:"number",type:"number"}}},Demo={args:{min:-5,max:5,minLength:2,maxLength:2,placeholder:"00",className:"text-4xl font-mono w-[3ch] text-right outline-none font-medium border-b-4 border-zinc-400 focus:border-blue-600"}},__namedExportsOrder=["Demo"]},"./src/stories/NumericInput.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{X:()=>NumInput});var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/.pnpm/next@15.5.0_@babel+core@7.28.3_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/next/dist/compiled/react/jsx-runtime.js"),react__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/.pnpm/next@15.5.0_@babel+core@7.28.3_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/next/dist/compiled/react/index.js"),_utils_helpers_cn__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/utils/helpers/cn.ts");const sanitizeValue=value=>"-"===value?value:value=(value=value.replace(/[^0-9-]/g,"")).startsWith("-")?`-${value.slice(1).replace(/-/g,"")}`:value.replace(/-/g,""),getNumber=value=>{if(""===value||"-"===value)return null;const n=Number(value);return Number.isNaN(n)?null:n},NumInput=({ref,className,min,max,minLength=0,maxLength=1/0,onChange,onBlur,onFocus,...props})=>{const inputRef=(0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null),[isFocused,setIsFocused]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(!1);(0,react__WEBPACK_IMPORTED_MODULE_1__.useImperativeHandle)(ref,()=>inputRef.current);const onChangeHandler=(0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(e=>{const value=sanitizeValue(e.target.value);if(!(void 0!==max&&Number(value)>Number(max))&&!(void 0!==min&&Number(value)<Number(min))&&(inputRef.current&&(inputRef.current.value=value),onChange)){const syntheticEvent={...e,target:{...e.target,value}};onChange(syntheticEvent)}},[onChange,max,min]),onBlurHandler=(0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(e=>{setIsFocused(!1);const processedValue=((rawValue,minLength,maxLength,min,max)=>{let value=sanitizeValue(rawValue);if("-"!==value){const n=Number(value);if(!Number.isNaN(n)){const clamped=((value,min,max)=>void 0!==min&&value<min?min:void 0!==max&&value>max?max:value)(n,min,max);value=String(clamped)}}return void 0!==maxLength&&maxLength!==1/0&&"-"!==value&&(value=((value,maxLength)=>{if("-"===value)return value;const isNegative=value.startsWith("-");let numPart=isNegative?value.slice(1):value;return numPart.length>maxLength&&(numPart=numPart.slice(0,maxLength)),isNegative?`-${numPart}`:numPart})(value,maxLength)),minLength>0&&"-"!==value&&(value=((value,minLength)=>{if("-"===value)return value;const isNegative=value.startsWith("-");let numPart=isNegative?value.slice(1):value;return numPart=numPart.padStart(minLength,"0"),isNegative?`-${numPart}`:numPart})(value,minLength)),value})(e.target.value,minLength,maxLength,Number(min),Number(max));if(inputRef.current&&(inputRef.current.value=processedValue),onBlur){const syntheticEvent={...e,target:{...e.target,value:processedValue}};onBlur(syntheticEvent)}},[onBlur,minLength,maxLength,min,max]),onFocusHandler=(0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(e=>{setIsFocused(!0),null==onFocus||onFocus(e)},[onFocus]),onKeyDownHandler=(0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(e=>{if("ArrowUp"!==e.key&&"ArrowDown"!==e.key)return;if(!inputRef.current)return;const currentValue=inputRef.current.value,n=getNumber(currentValue);let newValue;if(null===n)newValue="ArrowDown"===e.key?"-1":"1";else{const next="ArrowDown"===e.key?n-1:n+1;newValue=String(next)}newValue=sanitizeValue(newValue),inputRef.current.value=newValue,e.preventDefault()},[]),onWheelHandler=(0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(e=>{if(!isFocused)return;if(!inputRef.current)return;const currentValue=inputRef.current.value,n=getNumber(currentValue);let newValue;if(null===n)newValue=e.deltaY>0?"-1":"1";else{const next=e.deltaY>0?n-1:n+1;newValue=String(next)}newValue=sanitizeValue(newValue),inputRef.current.value=newValue},[isFocused]);return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("input",{...props,className:(0,_utils_helpers_cn__WEBPACK_IMPORTED_MODULE_2__.cn)(className,"overflow-clip overscroll-none"),ref:inputRef,minLength,maxLength,type:"text",inputMode:"numeric",pattern:"-?[0-9]*",onChange:onChangeHandler,onFocus:onFocusHandler,onBlur:onBlurHandler,onKeyDown:onKeyDownHandler,onWheel:onWheelHandler})};NumInput.__docgenInfo={description:"",methods:[],displayName:"NumInput",props:{minLength:{defaultValue:{value:"0",computed:!1},required:!1},maxLength:{defaultValue:{value:"Infinity",computed:!0},required:!1}}}}}]);